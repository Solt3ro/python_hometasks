print('Задача 3. Апгрейд калькулятора')

# Степан использует калькулятор для расчёта суммы и разности чисел, но на работе ему требуются не только обычные арифметические действия.
# Он ничего не хочет делать вручную, поэтому решил немного расширить функциональность калькулятора.

# Что нужно сделать
# Напишите программу, запрашивающую у пользователя число и действие, которое нужно сделать с числом:
# вывести сумму его цифр, максимальную или минимальную цифру.
# Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

# Запрошенные числа должны передаваться в функции суммы, максимума и минимума при помощи аргументов.

# Пример 1
# Введите число: 984
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 1
# Сумма цифр: 21

# Пример 2
# Введите число: 546
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 2
# Максимальная цифра: 6

# Пример 3
# Введите число: 741
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: 3
# Минимальная цифра: 1

def num_sum(num):
    sum = 0
    while num > 0:
        a = num %10
        num = num //10
        sum += a
    print('Сумма цифр: ',sum)


def max_num(num):
    max = 0
    for a in str(num):
        if int(a) > int(max):
            max = a
    print('Максимальная цифра: ',max)

def min_num(num):
    min = 999
    for a in str(num):
        if int(a) < int(min):
            min = a
    print('Минимальная цифра: ', min)

   


def calc():
    num =int(input('Введите число: ')) 
    calc_task =int(input('Введите номер действия: 1 - сумма цифр: 2 - максимальная цифра: 3 - минимальная цифра: '))
    if calc_task == 1:
        num_sum(num)
    elif calc_task == 2:
        max_num(num)
    elif calc_task == 3:
        min_num(num)
    else:
        print('Только 1, 2, 3')
    calc()


calc()